/*WOW*/!function (a, b) { if ("function" == typeof define && define.amd) define(["module", "exports"], b); else if ("undefined" != typeof exports) b(module, exports); else { var c = { exports: {} }; b(c, c.exports), a.WOW = c.exports } }(this, function (a, b) { "use strict"; function c(a, b) { if (!(a instanceof b)) throw new TypeError("Cannot call a class as a function") } function d(a, b) { return b.indexOf(a) >= 0 } function e(a, b) { for (var c in b) if (null == a[c]) { var d = b[c]; a[c] = d } return a } function f(a) { return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(a) } function g(a) { var b = arguments.length <= 1 || void 0 === arguments[1] ? !1 : arguments[1], c = arguments.length <= 2 || void 0 === arguments[2] ? !1 : arguments[2], d = arguments.length <= 3 || void 0 === arguments[3] ? null : arguments[3], e = void 0; return null != document.createEvent ? (e = document.createEvent("CustomEvent"), e.initCustomEvent(a, b, c, d)) : null != document.createEventObject ? (e = document.createEventObject(), e.eventType = a) : e.eventName = a, e } function h(a, b) { null != a.dispatchEvent ? a.dispatchEvent(b) : b in (null != a) ? a[b]() : "on" + b in (null != a) && a["on" + b]() } function i(a, b, c) { null != a.addEventListener ? a.addEventListener(b, c, !1) : null != a.attachEvent ? a.attachEvent("on" + b, c) : a[b] = c } function j(a, b, c) { null != a.removeEventListener ? a.removeEventListener(b, c, !1) : null != a.detachEvent ? a.detachEvent("on" + b, c) : delete a[b] } function k() { return "innerHeight" in window ? window.innerHeight : document.documentElement.clientHeight } Object.defineProperty(b, "__esModule", { value: !0 }); var l, m, n = function () { function a(a, b) { for (var c = 0; c < b.length; c++) { var d = b[c]; d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(a, d.key, d) } } return function (b, c, d) { return c && a(b.prototype, c), d && a(b, d), b } }(), o = window.WeakMap || window.MozWeakMap || function () { function a() { c(this, a), this.keys = [], this.values = [] } return n(a, [{ key: "get", value: function (a) { for (var b = 0; b < this.keys.length; b++) { var c = this.keys[b]; if (c === a) return this.values[b] } } }, { key: "set", value: function (a, b) { for (var c = 0; c < this.keys.length; c++) { var d = this.keys[c]; if (d === a) return this.values[c] = b, this } return this.keys.push(a), this.values.push(b), this } }]), a }(), p = window.MutationObserver || window.WebkitMutationObserver || window.MozMutationObserver || (m = l = function () { function a() { c(this, a), "undefined" != typeof console && null !== console && (console.warn("MutationObserver is not supported by your browser."), console.warn("WOW.js cannot detect dom mutations, please call .sync() after loading new content.")) } return n(a, [{ key: "observe", value: function () { } }]), a }(), l.notSupported = !0, m), q = window.getComputedStyle || function (a) { var b = /(\-([a-z]){1})/g; return { getPropertyValue: function (c) { "float" === c && (c = "styleFloat"), b.test(c) && c.replace(b, function (a, b) { return b.toUpperCase() }); var d = a.currentStyle; return (null != d ? d[c] : void 0) || null } } }, r = function () { function a() { var b = arguments.length <= 0 || void 0 === arguments[0] ? {} : arguments[0]; c(this, a), this.defaults = { boxClass: "wow", animateClass: "animated", offset: 0, mobile: !0, live: !0, callback: null, scrollContainer: null, resetAnimation: !0 }, this.animate = function () { return "requestAnimationFrame" in window ? function (a) { return window.requestAnimationFrame(a) } : function (a) { return a() } }(), this.vendors = ["moz", "webkit"], this.start = this.start.bind(this), this.resetAnimation = this.resetAnimation.bind(this), this.scrollHandler = this.scrollHandler.bind(this), this.scrollCallback = this.scrollCallback.bind(this), this.scrolled = !0, this.config = e(b, this.defaults), null != b.scrollContainer && (this.config.scrollContainer = document.querySelector(b.scrollContainer)), this.animationNameCache = new o, this.wowEvent = g(this.config.boxClass) } return n(a, [{ key: "init", value: function () { this.element = window.document.documentElement, d(document.readyState, ["interactive", "complete"]) ? this.start() : i(document, "DOMContentLoaded", this.start), this.finished = [] } }, { key: "start", value: function () { var a = this; if (this.stopped = !1, this.boxes = [].slice.call(this.element.querySelectorAll("." + this.config.boxClass)), this.all = this.boxes.slice(0), this.boxes.length) if (this.disabled()) this.resetStyle(); else for (var b = 0; b < this.boxes.length; b++) { var c = this.boxes[b]; this.applyStyle(c, !0) } if (this.disabled() || (i(this.config.scrollContainer || window, "scroll", this.scrollHandler), i(window, "resize", this.scrollHandler), this.interval = setInterval(this.scrollCallback, 50)), this.config.live) { var d = new p(function (b) { for (var c = 0; c < b.length; c++)for (var d = b[c], e = 0; e < d.addedNodes.length; e++) { var f = d.addedNodes[e]; a.doSync(f) } }); d.observe(document.body, { childList: !0, subtree: !0 }) } } }, { key: "stop", value: function () { this.stopped = !0, j(this.config.scrollContainer || window, "scroll", this.scrollHandler), j(window, "resize", this.scrollHandler), null != this.interval && clearInterval(this.interval) } }, { key: "sync", value: function () { p.notSupported && this.doSync(this.element) } }, { key: "doSync", value: function (a) { if ("undefined" != typeof a && null !== a || (a = this.element), 1 === a.nodeType) { a = a.parentNode || a; for (var b = a.querySelectorAll("." + this.config.boxClass), c = 0; c < b.length; c++) { var e = b[c]; d(e, this.all) || (this.boxes.push(e), this.all.push(e), this.stopped || this.disabled() ? this.resetStyle() : this.applyStyle(e, !0), this.scrolled = !0) } } } }, { key: "show", value: function (a) { return this.applyStyle(a), a.className = a.className + " " + this.config.animateClass, null != this.config.callback && this.config.callback(a), h(a, this.wowEvent), this.config.resetAnimation && (i(a, "animationend", this.resetAnimation), i(a, "oanimationend", this.resetAnimation), i(a, "webkitAnimationEnd", this.resetAnimation), i(a, "MSAnimationEnd", this.resetAnimation)), a } }, { key: "applyStyle", value: function (a, b) { var c = this, d = a.getAttribute("data-wow-duration"), e = a.getAttribute("data-wow-delay"), f = a.getAttribute("data-wow-iteration"); return this.animate(function () { return c.customStyle(a, b, d, e, f) }) } }, { key: "resetStyle", value: function () { for (var a = 0; a < this.boxes.length; a++) { var b = this.boxes[a]; b.style.visibility = "visible" } } }, { key: "resetAnimation", value: function (a) { if (a.type.toLowerCase().indexOf("animationend") >= 0) { var b = a.target || a.srcElement; b.className = b.className.replace(this.config.animateClass, "").trim() } } }, { key: "customStyle", value: function (a, b, c, d, e) { return b && this.cacheAnimationName(a), a.style.visibility = b ? "hidden" : "visible", c && this.vendorSet(a.style, { animationDuration: c }), d && this.vendorSet(a.style, { animationDelay: d }), e && this.vendorSet(a.style, { animationIterationCount: e }), this.vendorSet(a.style, { animationName: b ? "none" : this.cachedAnimationName(a) }), a } }, { key: "vendorSet", value: function (a, b) { for (var c in b) if (b.hasOwnProperty(c)) { var d = b[c]; a["" + c] = d; for (var e = 0; e < this.vendors.length; e++) { var f = this.vendors[e]; a["" + f + c.charAt(0).toUpperCase() + c.substr(1)] = d } } } }, { key: "vendorCSS", value: function (a, b) { for (var c = q(a), d = c.getPropertyCSSValue(b), e = 0; e < this.vendors.length; e++) { var f = this.vendors[e]; d = d || c.getPropertyCSSValue("-" + f + "-" + b) } return d } }, { key: "animationName", value: function (a) { var b = void 0; try { b = this.vendorCSS(a, "animation-name").cssText } catch (c) { b = q(a).getPropertyValue("animation-name") } return "none" === b ? "" : b } }, { key: "cacheAnimationName", value: function (a) { return this.animationNameCache.set(a, this.animationName(a)) } }, { key: "cachedAnimationName", value: function (a) { return this.animationNameCache.get(a) } }, { key: "scrollHandler", value: function () { this.scrolled = !0 } }, { key: "scrollCallback", value: function () { if (this.scrolled) { this.scrolled = !1; for (var a = [], b = 0; b < this.boxes.length; b++) { var c = this.boxes[b]; if (c) { if (this.isVisible(c)) { this.show(c); continue } a.push(c) } } this.boxes = a, this.boxes.length || this.config.live || this.stop() } } }, { key: "offsetTop", value: function (a) { for (; void 0 === a.offsetTop;)a = a.parentNode; for (var b = a.offsetTop; a.offsetParent;)a = a.offsetParent, b += a.offsetTop; return b } }, { key: "isVisible", value: function (a) { var b = a.getAttribute("data-wow-offset") || this.config.offset, c = this.config.scrollContainer && this.config.scrollContainer.scrollTop || window.pageYOffset, d = c + Math.min(this.element.clientHeight, k()) - b, e = this.offsetTop(a), f = e + a.clientHeight; return d >= e && f >= c } }, { key: "disabled", value: function () { return !this.config.mobile && f(navigator.userAgent) } }]), a }(); b["default"] = r, a.exports = b["default"] });
wow = new WOW({ boxClass: 'wow', animateClass: 'animated', offset: 0, mobile: false, live: true })
wow.init();
$("p").addClass("wow");
$(".animate li").addClass("wow");
$(".container-accordian p").removeClass("wow");
$(".container-accordian p").addClass("animated");
/*BootstrapOffcanvas*/(function () { var t = function (t, s) { return function () { return t.apply(s, arguments) } }; !function (s, e) { var n, a, i, r, h; a = function () { return function (e) { this.element = e, this._clickEvent = t(this._clickEvent, this), this.element = s(this.element), this.dropdown = this.element.parent().find(".dropdown-menu"), this.element.on("click", this._clickEvent) } }(), i = function () { function n(e, n, a, i) { this.button = e, this.element = n, this.location = a, this.offcanvas = i, this._getFade = t(this._getFade, this), this._getCss = t(this._getCss, this), this._touchEnd = t(this._touchEnd, this), this._touchMove = t(this._touchMove, this), this.endThreshold = 130, this.startThreshold = this.element.hasClass("navbar-offcanvas-right") ? s("body").outerWidth() - 60 : 20, this.maxStartThreshold = this.element.hasClass("navbar-offcanvas-right") ? s("body").outerWidth() - 20 : 60, this.currentX = 0, this.fade = !!this.element.hasClass("navbar-offcanvas-fade"), s(document).on("touchstart", this._touchStart), s(document).on("touchmove", this._touchMove), s(document).on("touchend", this._touchEnd) } return n.prototype._touchStart = function (t) { return this.startX = t.originalEvent.touches[0].pageX, this.element.height(s(e).outerHeight()) }, n.prototype._touchMove = function (t) { var e; if (s(t.target).parents(".navbar-offcanvas").length > 0) return !0; if (this.startX > this.startThreshold && this.startX < this.maxStartThreshold) { if (t.preventDefault(), e = t.originalEvent.touches[0].pageX - this.startX, e = this.element.hasClass("navbar-offcanvas-right") ? -e : e, Math.abs(e) < this.element.outerWidth()) return this.element.css(this._getCss(e)), this.element.css(this._getFade(e)) } else if (this.element.hasClass("in") && (t.preventDefault(), e = t.originalEvent.touches[0].pageX + (this.currentX - this.startX), e = this.element.hasClass("navbar-offcanvas-right") ? -e : e, Math.abs(e) < this.element.outerWidth())) return this.element.css(this._getCss(e)), this.element.css(this._getFade(e)) }, n.prototype._touchEnd = function (t) { var e, n; return s(t.target).parents(".navbar-offcanvas").length > 0 || (n = t.originalEvent.changedTouches[0].pageX, e = this.element.hasClass("navbar-offcanvas-right") ? Math.abs(n) > this.endThreshold + 50 : n < this.endThreshold + 50, this.element.hasClass("in") && e ? (this.currentX = 0, this.element.removeClass("in").css(this._clearCss()), this.button.removeClass("is-open")) : Math.abs(n - this.startX) > this.endThreshold && this.startX > this.startThreshold && this.startX < this.maxStartThreshold ? (this.currentX = this.element.hasClass("navbar-offcanvas-right") ? -this.element.outerWidth() : this.element.outerWidth(), this.element.toggleClass("in").css(this._clearCss()), this.button.toggleClass("is-open")) : this.element.css(this._clearCss()), this.offcanvas.bodyOverflow()) }, n.prototype._getCss = function (t) { return { "-webkit-transform": "translate3d(" + (t = this.element.hasClass("navbar-offcanvas-right") ? -t : t) + "px, 0px, 0px)", "-webkit-transition-duration": "0s", "-moz-transform": "translate3d(" + t + "px, 0px, 0px)", "-moz-transition": "0s", "-o-transform": "translate3d(" + t + "px, 0px, 0px)", "-o-transition": "0s", transform: "translate3d(" + t + "px, 0px, 0px)", transition: "0s" } }, n.prototype._getFade = function (t) { return this.fade ? { opacity: t / this.element.outerWidth() } : {} }, n.prototype._clearCss = function () { return { "-webkit-transform": "", "-webkit-transition-duration": "", "-moz-transform": "", "-moz-transition": "", "-o-transform": "", "-o-transition": "", transform: "", transition: "", opacity: "" } }, n }(), e.Offcanvas = n = function () { function n(e) { var n, r; this.element = e, this.bodyOverflow = t(this.bodyOverflow, this), this._sendEventsAfter = t(this._sendEventsAfter, this), this._sendEventsBefore = t(this._sendEventsBefore, this), this._documentClicked = t(this._documentClicked, this), this._clicked = t(this._clicked, this), this._navbarHeight = t(this._navbarHeight, this), (n = !!this.element.attr("data-target") && this.element.attr("data-target")) ? (this.target = s(n), this.target.length && !this.target.hasClass("js-offcanas-done") && (this.element.addClass("js-offcanvas-has-events"), this.location = this.target.hasClass("navbar-offcanvas-right") ? "right" : "left", this.target.addClass(transform ? "offcanvas-transform js-offcanas-done" : "offcanvas-position js-offcanas-done"), this.target.data("offcanvas", this), this.element.on("click", this._clicked), this.target.on("transitionend", (r = this, function () { if (r.target.is(":not(.in)")) return r.target.height("") })), s(document).on("click", this._documentClicked), this.target.hasClass("navbar-offcanvas-touch") && new i(this.element, this.target, this.location, this), this.target.find(".dropdown-toggle").each(function () { return new a(this) }))) : console.warn("Offcanvas: `data-target` attribute must be present.") } return n.prototype._navbarHeight = function () { if (this.target.is(".in")) return this.target.height(s(e).outerHeight()) }, n.prototype._clicked = function (t) { return t.preventDefault(), this._sendEventsBefore(), s(".navbar-offcanvas").not(this.target).removeClass("in"), this.target.toggleClass("in"), this.element.toggleClass("is-open"), this._navbarHeight(), this.bodyOverflow() }, n.prototype._documentClicked = function (t) { var e; if (!(e = s(t.target)).hasClass("offcanvas-toggle") && 0 === e.parents(".offcanvas-toggle").length && 0 === e.parents(".navbar-offcanvas").length && !e.hasClass("navbar-offcanvas") && this.target.hasClass("in")) return t.preventDefault(), this._sendEventsBefore(), this.target.removeClass("in"), this.element.removeClass("is-open"), this._navbarHeight(), this.bodyOverflow() }, n.prototype._sendEventsBefore = function () { return this.target.hasClass("in") ? this.target.trigger("show.bs.offcanvas") : this.target.trigger("hide.bs.offcanvas") }, n.prototype._sendEventsAfter = function () { return this.target.hasClass("in") ? this.target.trigger("shown.bs.offcanvas") : this.target.trigger("hidden.bs.offcanvas") }, n.prototype.bodyOverflow = function () { return this._sendEventsAfter() }, n }(), h = this, r = function () { var t, s, e, n; return n = "translate3d(0px, 0px, 0px)", e = /translate3d\(0px, 0px, 0px\)/g, (s = document.createElement("div")).style.cssText = "-webkit-transform: " + n + "; -moz-transform: " + n + "; -o-transform: " + n + "; transform: " + n, t = s.style.cssText.match(e), h.transform = null != t.length }, s(function () { return r(), s('[data-toggle="offcanvas"]').each(function () { return new n(s(this)) }), s(e).on("resize", function () { return s(".navbar-offcanvas.in").each(function () { return s(this).height("").removeClass("in") }) }), s(".offcanvas-toggle").each(function () { return s(this).on("click", function (t) { var e, n; if (!s(this).hasClass("js-offcanvas-has-events") && (n = s(this).attr("data-target"), e = s(n))) return e.height(""), e.removeClass("in"), s("body").css({ overflow: "", position: "" }) }) }) }) }(window.jQuery, window) }).call(this);
/*Tooltip*/$(function () { $('[data-toggle="tooltip"]').tooltip() })
